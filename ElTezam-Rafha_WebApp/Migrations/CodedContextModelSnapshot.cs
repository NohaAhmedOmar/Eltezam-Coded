// <auto-generated />
using System;
using ElTezam_Coded_WebApp.DomainModels;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ElTezam_Coded_WebApp.Migrations
{
    [DbContext(typeof(CodedContext))]
    partial class CodedContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ElTezam_Coded_WebApp.DomainModels.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CityId"), 1L, 1);

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("GovernorateId")
                        .HasColumnType("int");

                    b.HasKey("CityId");

                    b.HasIndex(new[] { "GovernorateId" }, "IX_Cities_GovernorateId");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("ElTezam_Coded_WebApp.DomainModels.Code", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code1")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("Code");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id", "Code1");

                    b.HasIndex("CategoryId");

                    b.ToTable("Codes");
                });

            modelBuilder.Entity("ElTezam_Coded_WebApp.DomainModels.CodeCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"), 1L, 1);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CategoryId");

                    b.ToTable("CodeCategory", (string)null);
                });

            modelBuilder.Entity("ElTezam_Coded_WebApp.DomainModels.CodesTemp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("CodesTemp", (string)null);
                });

            modelBuilder.Entity("ElTezam_Coded_WebApp.DomainModels.Employee", b =>
                {
                    b.Property<long>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("EmployeeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("EmployeeId"), 1L, 1);

                    b.Property<int?>("ActualJobNameCode")
                        .HasColumnType("int");

                    b.Property<string>("ActualJobNameDescription")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("ActualOrganizationId")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ActualOrganizationID");

                    b.Property<string>("ActualOrganizationName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("BasicSalary")
                        .HasColumnType("float");

                    b.Property<string>("BirthDate")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<int?>("BloodType")
                        .HasColumnType("int");

                    b.Property<string>("BloodTypeCode")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("EmailAddress")
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.Property<string>("EmployeeStatusCode")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("EmploymentTypeCode")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<string>("EmploymentTypeDescription")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstGradeDate")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("FirstNameAr")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstNameEn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("GenderCode")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("GovernmentHireDate")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<int>("Healthstatus")
                        .HasColumnType("int");

                    b.Property<string>("HealthstatusCode")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("IqamaNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("JobCatChain")
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("JobClassCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobClassDescription")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("JobNameCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobNameDescription")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("JobNumber")
                        .HasColumnType("int");

                    b.Property<string>("JobOrganizationId")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("JobOrganizationID");

                    b.Property<string>("JobOrganizationName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastNameAr")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastNameEn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastUpdateDate")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("LocationCode")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("MaritalStatus")
                        .HasColumnType("int");

                    b.Property<string>("MaritalStatusCode")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("MinistryHireDate")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("Mobile")
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("NationalId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("NationalID");

                    b.Property<string>("NationalityCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("NextPromotionDate")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("RankCode")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<int?>("Religion")
                        .HasColumnType("int");

                    b.Property<string>("ReligionCode")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<double?>("RemainingAnnualBalance")
                        .HasColumnType("float");

                    b.Property<double?>("RemainingBusinessBalance")
                        .HasColumnType("float");

                    b.Property<int?>("RequestIdentityId")
                        .HasColumnType("int");

                    b.Property<string>("SecondNameAr")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SecondNameEn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ServiceResponseNumber")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("StepDate")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<int>("StepId")
                        .HasColumnType("int")
                        .HasColumnName("StepID");

                    b.Property<int?>("SubAgencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SubAgencyID")
                        .HasDefaultValueSql("((2122))");

                    b.Property<string>("TerminationDate")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("TerminationReasonCode")
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<string>("ThirdNameAr")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ThirdNameEn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TransactionCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EmployeeId");

                    b.HasIndex("RequestIdentityId");

                    b.HasIndex("BloodType", "BloodTypeCode");

                    b.HasIndex("Gender", "GenderCode");

                    b.HasIndex("Healthstatus", "HealthstatusCode");

                    b.HasIndex("MaritalStatus", "MaritalStatusCode");

                    b.HasIndex("Religion", "ReligionCode");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("ElTezam_Coded_WebApp.DomainModels.EmployeeAppraisalInfo", b =>
                {
                    b.Property<int>("AppraisalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AppraisalID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AppraisalId"), 1L, 1);

                    b.Property<string>("AppraisalTypeCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<string>("EndDate")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("IqamaNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("NationalID");

                    b.Property<string>("RatingCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("RequestIdentityId")
                        .HasColumnType("int");

                    b.Property<string>("Result")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("StartDate")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<int?>("SubAgencyId")
                        .HasColumnType("int")
                        .HasColumnName("SubAgencyID");

                    b.Property<string>("TransactionType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("AppraisalId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("RequestIdentityId");

                    b.ToTable("EmployeeAppraisalInfo", (string)null);
                });

            modelBuilder.Entity("ElTezam_Coded_WebApp.DomainModels.EmployeeJob", b =>
                {
                    b.Property<int>("EmployeeJobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeJobId"), 1L, 1);

                    b.Property<double?>("BasicSalary")
                        .HasColumnType("float");

                    b.Property<string>("DecisionDate")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<int?>("DecisionNumber")
                        .HasColumnType("int");

                    b.Property<string>("DescriptionType")
                        .HasColumnType("text");

                    b.Property<long>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<string>("EmploymentTypeCode")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int?>("EmploymentTypeCodeId")
                        .HasColumnType("int");

                    b.Property<string>("EmploymentTypeDescription")
                        .HasColumnType("text");

                    b.Property<string>("GradeDate")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("IqamaNumber")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("JobCatChain")
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("JobClassCode")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("JobClassDescription")
                        .HasColumnType("text");

                    b.Property<string>("JobNameCode")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("JobNameDescription")
                        .HasColumnType("text");

                    b.Property<int>("JobNumber")
                        .HasColumnType("int");

                    b.Property<string>("LastUpdateDate")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("LocationCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NationalId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("NationalID");

                    b.Property<string>("RankCode")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int?>("RankCodeId")
                        .HasColumnType("int");

                    b.Property<int?>("RequestIdentityId")
                        .HasColumnType("int");

                    b.Property<string>("StepDate")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<int?>("StepId")
                        .HasColumnType("int")
                        .HasColumnName("StepID");

                    b.Property<int?>("SubAgencyId")
                        .HasColumnType("int")
                        .HasColumnName("SubAgencyID");

                    b.Property<string>("TransactionCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TransactionDescription")
                        .HasColumnType("text");

                    b.Property<string>("TransactionEndDate")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("TransactionStartDate")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.HasKey("EmployeeJobId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("RequestIdentityId");

                    b.HasIndex("EmploymentTypeCodeId", "EmploymentTypeCode");

                    b.HasIndex("RankCodeId", "RankCode");

                    b.ToTable("EmployeeJobs");
                });

            modelBuilder.Entity("ElTezam_Coded_WebApp.DomainModels.EmployeePayment", b =>
                {
                    b.Property<int>("EmployeePayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeePayId"), 1L, 1);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("ConsolidationSetCode")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("ConsolidationSetDescription")
                        .HasColumnType("text");

                    b.Property<int>("ConsolidationSetId")
                        .HasColumnType("int")
                        .HasColumnName("ConsolidationSetID");

                    b.Property<string>("ElementClassification")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ElementCode")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("ElementCodeId")
                        .HasColumnType("int");

                    b.Property<long>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("EmploymentTypeCode")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int?>("EmploymentTypeCodeId")
                        .HasColumnType("int");

                    b.Property<int>("GregorianMonth")
                        .HasColumnType("int");

                    b.Property<int>("GregorianYear")
                        .HasColumnType("int");

                    b.Property<int>("HijriMonth")
                        .HasColumnType("int");

                    b.Property<int>("HijriYear")
                        .HasColumnType("int");

                    b.Property<string>("IqamaNumber")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("NationalId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("NationalID");

                    b.Property<double>("NetPay")
                        .HasColumnType("float");

                    b.Property<string>("PaidDate")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("RankCode")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int?>("RankCodeId")
                        .HasColumnType("int");

                    b.Property<int?>("RequestIdentityId")
                        .HasColumnType("int");

                    b.Property<int?>("StepId")
                        .HasColumnType("int")
                        .HasColumnName("StepID");

                    b.Property<int?>("SubAgencyId")
                        .HasColumnType("int")
                        .HasColumnName("SubAgencyID");

                    b.HasKey("EmployeePayId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("RequestIdentityId");

                    b.HasIndex("ConsolidationSetId", "ConsolidationSetCode");

                    b.HasIndex("ElementCodeId", "ElementCode");

                    b.HasIndex("EmploymentTypeCodeId", "EmploymentTypeCode");

                    b.HasIndex("RankCodeId", "RankCode");

                    b.ToTable("EmployeePayments");
                });

            modelBuilder.Entity("ElTezam_Coded_WebApp.DomainModels.EmployeeQualification", b =>
                {
                    b.Property<int>("QualificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("QualificationID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QualificationId"), 1L, 1);

                    b.Property<string>("CityName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CountryCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<string>("Grade")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("GraduationDate")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("IqamaNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MajorCode")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("MajorCodeId")
                        .HasColumnType("int");

                    b.Property<string>("NationalId")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("NationalID");

                    b.Property<string>("QualificationCode")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("QualificationCodeId")
                        .HasColumnType("int");

                    b.Property<string>("QualificationStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("RequestIdentityId")
                        .HasColumnType("int");

                    b.Property<double?>("Score")
                        .HasColumnType("float");

                    b.Property<double?>("ScoreOutOf")
                        .HasColumnType("float");

                    b.Property<int?>("SubAgencyId")
                        .HasColumnType("int")
                        .HasColumnName("SubAgencyID");

                    b.Property<string>("TransactionType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("UniversityCode")
                        .HasColumnType("int");

                    b.HasKey("QualificationId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("RequestIdentityId");

                    b.HasIndex("UniversityCode");

                    b.HasIndex("MajorCodeId", "MajorCode");

                    b.HasIndex("QualificationCodeId", "QualificationCode");

                    b.ToTable("EmployeeQualifications");
                });

            modelBuilder.Entity("ElTezam_Coded_WebApp.DomainModels.EmployeeVacation", b =>
                {
                    b.Property<long>("VacationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("VacationId"), 1L, 1);

                    b.Property<string>("DecisionDate")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<int?>("DecisionNumber")
                        .HasColumnType("int");

                    b.Property<long>("EmpoyeeId")
                        .HasColumnType("bigint");

                    b.Property<string>("EndDate")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("IqamaNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("NationalID");

                    b.Property<int>("Period")
                        .HasColumnType("int");

                    b.Property<int?>("RequestIdentityId")
                        .HasColumnType("int");

                    b.Property<string>("StartDate")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<int?>("SubAgencyId")
                        .HasColumnType("int")
                        .HasColumnName("SubAgencyID");

                    b.Property<string>("TransactionType")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("VacationCode")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("VacationCodeId")
                        .HasColumnType("int");

                    b.HasKey("VacationId");

                    b.HasIndex("EmpoyeeId");

                    b.HasIndex("RequestIdentityId");

                    b.HasIndex("VacationCodeId", "VacationCode");

                    b.ToTable("EmployeeVacations");
                });

            modelBuilder.Entity("ElTezam_Coded_WebApp.DomainModels.Enum", b =>
                {
                    b.Property<int>("EnumId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EnumId"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("EnumValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EnumId");

                    b.HasIndex(new[] { "CategoryId" }, "IX_Enums_CategoryId");

                    b.ToTable("Enums");
                });

            modelBuilder.Entity("ElTezam_Coded_WebApp.DomainModels.EnumsCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"), 1L, 1);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CategoryId");

                    b.ToTable("EnumsCategory", (string)null);
                });

            modelBuilder.Entity("ElTezam_Coded_WebApp.DomainModels.Governorate", b =>
                {
                    b.Property<int>("GovernorateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GovernorateId"), 1L, 1);

                    b.Property<string>("GovernorateName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("GovernorateId");

                    b.ToTable("Governorates");
                });

            modelBuilder.Entity("ElTezam_Coded_WebApp.DomainModels.Job", b =>
                {
                    b.Property<int>("JobPositionCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JobPositionCode"), 1L, 1);

                    b.Property<long?>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<string>("EmploymentTypeCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EndDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IqamaNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobCatChain")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("JobClassCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobNameCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobNameDescription")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("JobNumber")
                        .HasColumnType("int");

                    b.Property<string>("JobTransactionCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdateDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocationCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("PositionOrganizationId")
                        .HasColumnType("int")
                        .HasColumnName("PositionOrganizationID");

                    b.Property<string>("PositionOrganizationName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PositionStatus")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RankCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RequestIdentityId")
                        .HasColumnType("int");

                    b.Property<string>("StartDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SubAgencyId")
                        .HasColumnType("int");

                    b.Property<string>("TransactionDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VacantDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("JobPositionCode");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("RequestIdentityId");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("ElTezam_Coded_WebApp.DomainModels.LocationCode", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("GovernorateCode")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("GovernorateName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("LocationName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("RegionCode")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("RegionName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.ToTable("LocationCodes");
                });

            modelBuilder.Entity("ElTezam_Coded_WebApp.DomainModels.Nationality", b =>
                {
                    b.Property<int>("NationalityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NationalityId"), 1L, 1);

                    b.Property<string>("NationalityCode")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("NationalityDescription")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("NationalityId");

                    b.ToTable("Nationalities");
                });

            modelBuilder.Entity("ElTezam_Coded_WebApp.DomainModels.RequestIdentity", b =>
                {
                    b.Property<int>("RequestNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequestNumber"), 1L, 1);

                    b.Property<string>("Table")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasDefaultValueSql("(N'')");

                    b.HasKey("RequestNumber");

                    b.ToTable("RequestIdentities");
                });

            modelBuilder.Entity("ElTezam_Coded_WebApp.DomainModels.SubCity", b =>
                {
                    b.Property<int>("SubCityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubCityId"), 1L, 1);

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("SubCityName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("SubCityId");

                    b.HasIndex(new[] { "CityId" }, "IX_SubCities_CityId");

                    b.ToTable("SubCities");
                });

            modelBuilder.Entity("ElTezam_Coded_WebApp.DomainModels.University", b =>
                {
                    b.Property<int>("UniversityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UniversityId"), 1L, 1);

                    b.Property<string>("UniversityName")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("UniversityId");

                    b.ToTable("Universities");
                });

            modelBuilder.Entity("ElTezam_Coded_WebApp.DomainModels.City", b =>
                {
                    b.HasOne("ElTezam_Coded_WebApp.DomainModels.Governorate", "Governorate")
                        .WithMany("Cities")
                        .HasForeignKey("GovernorateId")
                        .IsRequired()
                        .HasConstraintName("FK_Cities_Governorates");

                    b.Navigation("Governorate");
                });

            modelBuilder.Entity("ElTezam_Coded_WebApp.DomainModels.Code", b =>
                {
                    b.HasOne("ElTezam_Coded_WebApp.DomainModels.CodeCategory", "Category")
                        .WithMany("Codes")
                        .HasForeignKey("CategoryId")
                        .IsRequired()
                        .HasConstraintName("FK__Codes__CategoryI__6E01572D");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ElTezam_Coded_WebApp.DomainModels.CodesTemp", b =>
                {
                    b.HasOne("ElTezam_Coded_WebApp.DomainModels.CodeCategory", "Category")
                        .WithMany("CodesTemps")
                        .HasForeignKey("CategoryId")
                        .IsRequired()
                        .HasConstraintName("FK__CodesTemp__Categ__10566F31");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ElTezam_Coded_WebApp.DomainModels.Employee", b =>
                {
                    b.HasOne("ElTezam_Coded_WebApp.DomainModels.RequestIdentity", "RequestIdentity")
                        .WithMany("Employees")
                        .HasForeignKey("RequestIdentityId");

                    b.HasOne("ElTezam_Coded_WebApp.DomainModels.Code", "BloodTypeNavigation")
                        .WithMany("EmployeeBloodTypeNavigations")
                        .HasForeignKey("BloodType", "BloodTypeCode")
                        .HasConstraintName("FK_Employees_Codes2");

                    b.HasOne("ElTezam_Coded_WebApp.DomainModels.Code", "GenderNavigation")
                        .WithMany("EmployeeGenderNavigations")
                        .HasForeignKey("Gender", "GenderCode")
                        .IsRequired()
                        .HasConstraintName("FK_Employees_Codes");

                    b.HasOne("ElTezam_Coded_WebApp.DomainModels.Code", "HealthstatusNavigation")
                        .WithMany("EmployeeHealthstatusNavigations")
                        .HasForeignKey("Healthstatus", "HealthstatusCode")
                        .IsRequired()
                        .HasConstraintName("FK_Employees_Codes4");

                    b.HasOne("ElTezam_Coded_WebApp.DomainModels.Code", "MaritalStatusNavigation")
                        .WithMany("EmployeeMaritalStatusNavigations")
                        .HasForeignKey("MaritalStatus", "MaritalStatusCode")
                        .IsRequired()
                        .HasConstraintName("FK_Employees_Codes3");

                    b.HasOne("ElTezam_Coded_WebApp.DomainModels.Code", "ReligionNavigation")
                        .WithMany("EmployeeReligionNavigations")
                        .HasForeignKey("Religion", "ReligionCode")
                        .HasConstraintName("FK_Employees_Codes1");

                    b.Navigation("BloodTypeNavigation");

                    b.Navigation("GenderNavigation");

                    b.Navigation("HealthstatusNavigation");

                    b.Navigation("MaritalStatusNavigation");

                    b.Navigation("ReligionNavigation");

                    b.Navigation("RequestIdentity");
                });

            modelBuilder.Entity("ElTezam_Coded_WebApp.DomainModels.EmployeeAppraisalInfo", b =>
                {
                    b.HasOne("ElTezam_Coded_WebApp.DomainModels.Employee", "Employee")
                        .WithMany("EmployeeAppraisalInfos")
                        .HasForeignKey("EmployeeId")
                        .IsRequired()
                        .HasConstraintName("FK_EmployeeAppraisalInfo_Employees");

                    b.HasOne("ElTezam_Coded_WebApp.DomainModels.RequestIdentity", "RequestIdentity")
                        .WithMany("EmployeeAppraisalInfos")
                        .HasForeignKey("RequestIdentityId");

                    b.Navigation("Employee");

                    b.Navigation("RequestIdentity");
                });

            modelBuilder.Entity("ElTezam_Coded_WebApp.DomainModels.EmployeeJob", b =>
                {
                    b.HasOne("ElTezam_Coded_WebApp.DomainModels.Employee", "Employee")
                        .WithMany("EmployeeJobs")
                        .HasForeignKey("EmployeeId")
                        .IsRequired()
                        .HasConstraintName("FK_EmployeeJob_Employees");

                    b.HasOne("ElTezam_Coded_WebApp.DomainModels.RequestIdentity", "RequestIdentity")
                        .WithMany("EmployeeJobs")
                        .HasForeignKey("RequestIdentityId");

                    b.HasOne("ElTezam_Coded_WebApp.DomainModels.Code", "EmploymentTypeCodeNavigation")
                        .WithMany("EmployeeJobEmploymentTypeCodeNavigations")
                        .HasForeignKey("EmploymentTypeCodeId", "EmploymentTypeCode")
                        .HasConstraintName("FK__EmployeeJobs__70A8B9AE");

                    b.HasOne("ElTezam_Coded_WebApp.DomainModels.Code", "RankCodeNavigation")
                        .WithMany("EmployeeJobRankCodeNavigations")
                        .HasForeignKey("RankCodeId", "RankCode")
                        .HasConstraintName("FK__EmployeeJobs__719CDDE7");

                    b.Navigation("Employee");

                    b.Navigation("EmploymentTypeCodeNavigation");

                    b.Navigation("RankCodeNavigation");

                    b.Navigation("RequestIdentity");
                });

            modelBuilder.Entity("ElTezam_Coded_WebApp.DomainModels.EmployeePayment", b =>
                {
                    b.HasOne("ElTezam_Coded_WebApp.DomainModels.Employee", "Employee")
                        .WithMany("EmployeePayments")
                        .HasForeignKey("EmployeeId")
                        .IsRequired()
                        .HasConstraintName("FK_EmployeePayments_Employees");

                    b.HasOne("ElTezam_Coded_WebApp.DomainModels.RequestIdentity", "RequestIdentity")
                        .WithMany("EmployeePayments")
                        .HasForeignKey("RequestIdentityId");

                    b.HasOne("ElTezam_Coded_WebApp.DomainModels.Code", "ConsolidationSet")
                        .WithMany("EmployeePaymentConsolidationSets")
                        .HasForeignKey("ConsolidationSetId", "ConsolidationSetCode")
                        .IsRequired()
                        .HasConstraintName("FK_EmployeePayments_Codes");

                    b.HasOne("ElTezam_Coded_WebApp.DomainModels.Code", "ElementCodeNavigation")
                        .WithMany("EmployeePaymentElementCodeNavigations")
                        .HasForeignKey("ElementCodeId", "ElementCode")
                        .IsRequired()
                        .HasConstraintName("FK_EmployeePayments_Codes1");

                    b.HasOne("ElTezam_Coded_WebApp.DomainModels.Code", "EmploymentTypeCodeNavigation")
                        .WithMany("EmployeePaymentEmploymentTypeCodeNavigations")
                        .HasForeignKey("EmploymentTypeCodeId", "EmploymentTypeCode")
                        .HasConstraintName("FK__EmployeePayments__690797E6");

                    b.HasOne("ElTezam_Coded_WebApp.DomainModels.Code", "RankCodeNavigation")
                        .WithMany("EmployeePaymentRankCodeNavigations")
                        .HasForeignKey("RankCodeId", "RankCode")
                        .HasConstraintName("FK__EmployeePayments__69FBBC1F");

                    b.Navigation("ConsolidationSet");

                    b.Navigation("ElementCodeNavigation");

                    b.Navigation("Employee");

                    b.Navigation("EmploymentTypeCodeNavigation");

                    b.Navigation("RankCodeNavigation");

                    b.Navigation("RequestIdentity");
                });

            modelBuilder.Entity("ElTezam_Coded_WebApp.DomainModels.EmployeeQualification", b =>
                {
                    b.HasOne("ElTezam_Coded_WebApp.DomainModels.Employee", "Employee")
                        .WithMany("EmployeeQualifications")
                        .HasForeignKey("EmployeeId")
                        .IsRequired()
                        .HasConstraintName("FK_EmployeeQualifications_Employees");

                    b.HasOne("ElTezam_Coded_WebApp.DomainModels.RequestIdentity", "RequestIdentity")
                        .WithMany("EmployeeQualifications")
                        .HasForeignKey("RequestIdentityId");

                    b.HasOne("ElTezam_Coded_WebApp.DomainModels.University", "UniversityCodeNavigation")
                        .WithMany("EmployeeQualifications")
                        .HasForeignKey("UniversityCode")
                        .IsRequired()
                        .HasConstraintName("FK_EmployeeQualifications_Universities");

                    b.HasOne("ElTezam_Coded_WebApp.DomainModels.Code", "MajorCodeNavigation")
                        .WithMany("EmployeeQualificationMajorCodeNavigations")
                        .HasForeignKey("MajorCodeId", "MajorCode")
                        .IsRequired()
                        .HasConstraintName("FK_EmployeeQualifications_Codes1");

                    b.HasOne("ElTezam_Coded_WebApp.DomainModels.Code", "QualificationCodeNavigation")
                        .WithMany("EmployeeQualificationQualificationCodeNavigations")
                        .HasForeignKey("QualificationCodeId", "QualificationCode")
                        .IsRequired()
                        .HasConstraintName("FK_EmployeeQualifications_Codes");

                    b.Navigation("Employee");

                    b.Navigation("MajorCodeNavigation");

                    b.Navigation("QualificationCodeNavigation");

                    b.Navigation("RequestIdentity");

                    b.Navigation("UniversityCodeNavigation");
                });

            modelBuilder.Entity("ElTezam_Coded_WebApp.DomainModels.EmployeeVacation", b =>
                {
                    b.HasOne("ElTezam_Coded_WebApp.DomainModels.Employee", "Empoyee")
                        .WithMany("EmployeeVacations")
                        .HasForeignKey("EmpoyeeId")
                        .IsRequired()
                        .HasConstraintName("FK_EmployeeVacations_Employees");

                    b.HasOne("ElTezam_Coded_WebApp.DomainModels.RequestIdentity", "RequestIdentity")
                        .WithMany("EmployeeVacations")
                        .HasForeignKey("RequestIdentityId");

                    b.HasOne("ElTezam_Coded_WebApp.DomainModels.Code", "VacationCodeNavigation")
                        .WithMany("EmployeeVacations")
                        .HasForeignKey("VacationCodeId", "VacationCode")
                        .IsRequired()
                        .HasConstraintName("FK_EmployeeVacations_Codes");

                    b.Navigation("Empoyee");

                    b.Navigation("RequestIdentity");

                    b.Navigation("VacationCodeNavigation");
                });

            modelBuilder.Entity("ElTezam_Coded_WebApp.DomainModels.Enum", b =>
                {
                    b.HasOne("ElTezam_Coded_WebApp.DomainModels.EnumsCategory", "Category")
                        .WithMany("Enums")
                        .HasForeignKey("CategoryId")
                        .IsRequired()
                        .HasConstraintName("FK_Enums_EnumsCategory");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ElTezam_Coded_WebApp.DomainModels.Job", b =>
                {
                    b.HasOne("ElTezam_Coded_WebApp.DomainModels.Employee", "Employee")
                        .WithMany("Jobs")
                        .HasForeignKey("EmployeeId");

                    b.HasOne("ElTezam_Coded_WebApp.DomainModels.RequestIdentity", "RequestIdentity")
                        .WithMany("Jobs")
                        .HasForeignKey("RequestIdentityId");

                    b.Navigation("Employee");

                    b.Navigation("RequestIdentity");
                });

            modelBuilder.Entity("ElTezam_Coded_WebApp.DomainModels.SubCity", b =>
                {
                    b.HasOne("ElTezam_Coded_WebApp.DomainModels.City", "City")
                        .WithMany("SubCities")
                        .HasForeignKey("CityId")
                        .IsRequired()
                        .HasConstraintName("FK_SubCities_Cities");

                    b.Navigation("City");
                });

            modelBuilder.Entity("ElTezam_Coded_WebApp.DomainModels.City", b =>
                {
                    b.Navigation("SubCities");
                });

            modelBuilder.Entity("ElTezam_Coded_WebApp.DomainModels.Code", b =>
                {
                    b.Navigation("EmployeeBloodTypeNavigations");

                    b.Navigation("EmployeeGenderNavigations");

                    b.Navigation("EmployeeHealthstatusNavigations");

                    b.Navigation("EmployeeJobEmploymentTypeCodeNavigations");

                    b.Navigation("EmployeeJobRankCodeNavigations");

                    b.Navigation("EmployeeMaritalStatusNavigations");

                    b.Navigation("EmployeePaymentConsolidationSets");

                    b.Navigation("EmployeePaymentElementCodeNavigations");

                    b.Navigation("EmployeePaymentEmploymentTypeCodeNavigations");

                    b.Navigation("EmployeePaymentRankCodeNavigations");

                    b.Navigation("EmployeeQualificationMajorCodeNavigations");

                    b.Navigation("EmployeeQualificationQualificationCodeNavigations");

                    b.Navigation("EmployeeReligionNavigations");

                    b.Navigation("EmployeeVacations");
                });

            modelBuilder.Entity("ElTezam_Coded_WebApp.DomainModels.CodeCategory", b =>
                {
                    b.Navigation("Codes");

                    b.Navigation("CodesTemps");
                });

            modelBuilder.Entity("ElTezam_Coded_WebApp.DomainModels.Employee", b =>
                {
                    b.Navigation("EmployeeAppraisalInfos");

                    b.Navigation("EmployeeJobs");

                    b.Navigation("EmployeePayments");

                    b.Navigation("EmployeeQualifications");

                    b.Navigation("EmployeeVacations");

                    b.Navigation("Jobs");
                });

            modelBuilder.Entity("ElTezam_Coded_WebApp.DomainModels.EnumsCategory", b =>
                {
                    b.Navigation("Enums");
                });

            modelBuilder.Entity("ElTezam_Coded_WebApp.DomainModels.Governorate", b =>
                {
                    b.Navigation("Cities");
                });

            modelBuilder.Entity("ElTezam_Coded_WebApp.DomainModels.RequestIdentity", b =>
                {
                    b.Navigation("EmployeeAppraisalInfos");

                    b.Navigation("EmployeeJobs");

                    b.Navigation("EmployeePayments");

                    b.Navigation("EmployeeQualifications");

                    b.Navigation("EmployeeVacations");

                    b.Navigation("Employees");

                    b.Navigation("Jobs");
                });

            modelBuilder.Entity("ElTezam_Coded_WebApp.DomainModels.University", b =>
                {
                    b.Navigation("EmployeeQualifications");
                });
#pragma warning restore 612, 618
        }
    }
}
